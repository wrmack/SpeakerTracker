//
//  RemoveEntityInteractor.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 1/10/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RemoveEntityBusinessLogic {
    func removeEntity(callback: @escaping ()->())
}

protocol RemoveEntityDataStore {
    var entity: Entity? {get set}
}



class RemoveEntityInteractor: RemoveEntityBusinessLogic, RemoveEntityDataStore { 
    var entity: Entity?
    
    
    func removeEntity(callback: @escaping ()->()) {
        let savedEntity = UserDefaultsManager.getCurrentEntity()
        if savedEntity == self.entity {
           UserDefaultsManager.removeCurrentEntity()
        }
        guard let docDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first else {
            print("RemoveEntityInteractor: removEntity: error: Document directory not found")
            return
        }
        guard let file = entity?.id?.uuidString else { return }
        let docFileURL = docDirectory.appendingPathComponent(file + ".ent") 
        do {
            try FileManager.default.removeItem(at: docFileURL)
            self.entity = nil
            callback()
        }
        catch {
            print(error)
        }
    }
}
