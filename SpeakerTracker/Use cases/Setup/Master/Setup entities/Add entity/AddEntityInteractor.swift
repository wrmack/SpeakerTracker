//
//  AddEntityInteractor.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 1/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddEntityBusinessLogic {
    func saveEntityToDisk(entity: Entity, callback: @escaping ()->())
}

protocol AddEntityDataStore {
  //var name: String { get set }
}

class AddEntityInteractor: AddEntityBusinessLogic, AddEntityDataStore {
    var presenter: AddEntityPresentationLogic?


    
    func saveEntityToDisk(entity: Entity, callback: @escaping ()->()) {
        guard let documentsDirectory = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first else {
            print("Error: Document directory not found")
            return
        }
        let docFileURL =  documentsDirectory.appendingPathComponent(entity.id!.uuidString + ".ent")
        let entityDoc = EntityDocument(fileURL: docFileURL, name: entity.name, entity: entity)
        entityDoc.save(to: docFileURL, for: .forCreating, completionHandler: { success in
            if !success {
                print("AddEntityInteractor: saveEntityToDisk: Error saving")
            }
            else{
                callback()
            }
        })
    }
}
