//
//  AddMeetingGroupRouter.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 8/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddMeetingGroupRoutingLogic {
    func returnToSource(source: DisplayMeetingGroupsViewController)
    func routeToSelectMembers()
    func returnFromSelectMembers(memberIDs: [UUID]?)
}

protocol AddMeetingGroupDataPassing {
    var dataStore: AddMeetingGroupDataStore? { get }
}


class AddMeetingGroupRouter: NSObject, AddMeetingGroupRoutingLogic, AddMeetingGroupDataPassing {
    weak var viewController: AddMeetingGroupViewController?
    var dataStore: AddMeetingGroupDataStore?
    var selectMembersVC: SelectMembersViewController?
    var splitVC: UISplitViewController?
    var displayNavC: UINavigationController?
  
    
  // MARK: Routing
  
    func returnToSource(source: DisplayMeetingGroupsViewController) {
        var destinationDS = source.router?.dataStore
        passDataToDisplayMeetingGroupsDataStore(source: dataStore!, destination: &destinationDS!)
        source.router?.returnFromAddingMeetingGroup()
    }
    
    
    func routeToSelectMembers() {
        selectMembersVC = SelectMembersViewController(source: viewController!)
        var destinationDS = selectMembersVC?.router?.dataStore
        passDataToSelectMembersDataStore(source: dataStore!, destination: &destinationDS!)
        splitVC = viewController!.splitViewController
        displayNavC = splitVC?.viewControllers[1] as? UINavigationController
        displayNavC?.pushViewController(selectMembersVC!, animated: true)
        selectMembersVC?.fetchMemberNames()
    }
    
    
    func returnFromSelectMembers(memberIDs: [UUID]?) {
        if memberIDs != nil {
            viewController!.refreshAfterSelectingMembers()
        }
        displayNavC?.popViewController(animated: true)
        selectMembersVC = nil
    }
    
    
    // MARK: Passing data
    
    func passDataToDisplayMeetingGroupsDataStore(source: AddMeetingGroupDataStore, destination: inout DisplayMeetingGroupsDataStore) {
        destination.entity = source.entity
    }
    
    
    func passDataToSelectMembersDataStore(source: AddMeetingGroupDataStore, destination: inout SelectMembersDataStore) {
        destination.entity = source.entity
    }
    
 
}
