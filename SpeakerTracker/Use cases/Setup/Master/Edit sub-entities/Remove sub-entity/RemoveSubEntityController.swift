//
//  RemoveSubEntityController.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 14/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RemoveSubEntityDisplayLogic: class {
//    func displaySomething(viewModel: RemoveSubEntity.Something.ViewModel)
}



class RemoveSubEntityController: NSObject, RemoveSubEntityDisplayLogic {
    var interactor: RemoveSubEntityBusinessLogic?
    var router: (NSObjectProtocol & RemoveSubEntityRoutingLogic & RemoveSubEntityDataPassing)?
    var sourceVC: EditSubEntityViewController?
    
    
    // MARK: Object lifecycle
    
    convenience init(source: EditSubEntityViewController) {
        self.init()
        self.sourceVC = source
        setup()
    }
    
    
    override init() {
        super.init()
    }
    
    
    deinit {
        print("RemoveSubEntityController: deinitialising")
    }

    // MARK: Setup

    private func setup() {
        let controller = self
        let interactor = RemoveSubEntityInteractor()
        let presenter = RemoveSubEntityPresenter()
        let router = RemoveSubEntityRouter()
        controller.interactor = interactor
        controller.router = router
        interactor.presenter = presenter
        presenter.controller = controller
        router.controller = controller
        router.dataStore = interactor
    }



    func removeSubEntity() {
        interactor?.removeSubEntity(callback: {
            self.router!.returnToSource(source: self.sourceVC!) 
        })
    }
}
