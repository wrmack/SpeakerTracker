//
//  SelectMembersInteractor.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 8/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectMembersBusinessLogic {
    func fetchMembers(request: SelectMembers.Members.Request)
    func getMembers(indices: [Int] ) -> [Member]
}

protocol SelectMembersDataStore {
    var entity: Entity? {get set}
    var members: [Member]? {get set}
}

class SelectMembersInteractor: SelectMembersBusinessLogic, SelectMembersDataStore {
    var presenter: SelectMembersPresentationLogic?
    var entity: Entity?
    var members: [Member]?



    // MARK: VIP

    func fetchMembers(request: SelectMembers.Members.Request) {
        let response = SelectMembers.Members.Response(members: entity!.members)
        self.presenter?.presentMembers(response: response) 
    }
    
    
    // MARK: Datastore
    
    func getMembers(indices: [Int] ) -> [Member] {
        let allMembers = entity?.members
        var selectedMembers = [Member]()
        for idx in indices {
            selectedMembers.append(allMembers![idx])
        }
        return selectedMembers
    }
}
