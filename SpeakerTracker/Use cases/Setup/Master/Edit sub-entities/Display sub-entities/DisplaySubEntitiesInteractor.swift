//
//  DisplaySubEntitiesInteractor.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 8/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DisplaySubEntitiesBusinessLogic {
    func fetchSubEntities(request: DisplaySubEntities.SubEntities.Request)
    func setCurrentSubEntity(index: Int)
    func refreshSubEntities()
}

protocol DisplaySubEntitiesDataStore {
    var subEntity: SubEntity? {get set}
    var entity: Entity? {get set}
}



class DisplaySubEntitiesInteractor: DisplaySubEntitiesBusinessLogic, DisplaySubEntitiesDataStore {
    var presenter: DisplaySubEntitiesPresentationLogic?
    var entity: Entity?
    var subEntity: SubEntity?
    var subEntities: [SubEntity]?

    
    // MARK: VIP
    
    func fetchSubEntities(request: DisplaySubEntities.SubEntities.Request) {
        self.subEntities = [SubEntity]()
        self.subEntity = nil
        self.entity = request.entity
        self.subEntities = request.entity?.subEntities
        let response = DisplaySubEntities.SubEntities.Response(subEntities: self.subEntities)
        self.presenter?.presentSubEntities(response: response)
    }
    
    
    func setCurrentSubEntity(index: Int) {
        if subEntities != nil {
            subEntity = subEntities![index]
        }
    }
    
    
    func refreshSubEntities() {
        self.subEntities = entity?.subEntities
        let response = DisplaySubEntities.SubEntities.Response(subEntities: self.subEntities)
        self.presenter?.presentSubEntities(response: response)
    }
}
