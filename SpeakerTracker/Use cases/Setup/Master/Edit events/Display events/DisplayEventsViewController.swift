//
//  DisplayEventsViewController.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 2/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DisplayEventsDisplayLogic: class {
    func displaySomething(viewModel: DisplayEvents.Something.ViewModel)
}

class DisplayEventsViewController: UITableViewController, DisplayEventsDisplayLogic {
    var interactor: DisplayEventsBusinessLogic?
    var router: (NSObjectProtocol & DisplayEventsRoutingLogic & DisplayEventsDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = DisplayEventsInteractor()
        let presenter = DisplayEventsPresenter()
        let router = DisplayEventsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
  // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }

    /*
     Adjust tab bar of original UITabBarController once views have loaded
     */
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        guard let tabBarCont = UIApplication.shared.keyWindow?.rootViewController as? UITabBarController else {
            print("Could not get UITabBarController")
            return
        }
        
        let splitVC = splitViewController
        let detailNavC = splitVC?.viewControllers[1]
        let detailVCView = detailNavC!.view
        let tbFrame = tabBarCont.tabBar.frame
        tabBarCont.tabBar.frame = CGRect(x: (detailVCView?.frame.origin.x)!, y: tbFrame.origin.y, width: (detailVCView?.frame.size.width)!, height: tbFrame.size.height)
    }
    // MARK: Do something

  
    @IBAction func addEvent(_ sender: Any) {
        
    }
    
    
    func doSomething() {
        let request = DisplayEvents.Something.Request()
        interactor?.doSomething(request: request)
    }


    func displaySomething(viewModel: DisplayEvents.Something.ViewModel) {
        //nameTextField.text = viewModel.name
  }
}
