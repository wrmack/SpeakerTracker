//
//  SelectMeetingGroupAndEventInteractor.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 25/10/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectMeetingGroupAndEventBusinessLogic {
    func setCurrentEntity(entity: Entity)
    func setCurrentMeetingGroup(meetingGroup: MeetingGroup)
    func setCurrentEvent(event: Event?)
    func getCurrentEntity()-> Entity?
    func getCurrentMeetingGroup()-> MeetingGroup?
}

protocol SelectMeetingGroupAndEventDataStore {
    var currentEntity: Entity? {get set}
    var currentMeetingGroup: MeetingGroup? {get set}
    var currentEvent: Event? {get set}
}


class SelectMeetingGroupAndEventInteractor: SelectMeetingGroupAndEventBusinessLogic, SelectMeetingGroupAndEventDataStore {
    var currentEntity: Entity?
    var currentMeetingGroup: MeetingGroup?
    var currentEvent: Event?
    
    
    // MARK: - Datastore
    
    func setCurrentEntity(entity: Entity) {
        self.currentEntity = entity
    }
    
    func getCurrentEntity()-> Entity? {
        return self.currentEntity
    }
    
    func setCurrentMeetingGroup(meetingGroup: MeetingGroup) {
        self.currentMeetingGroup = meetingGroup
    }
    
    
    func getCurrentMeetingGroup()-> MeetingGroup? {
        return self.currentMeetingGroup
    }
    
    func setCurrentEvent(event: Event?) {
        self.currentEvent = event
    }
}
