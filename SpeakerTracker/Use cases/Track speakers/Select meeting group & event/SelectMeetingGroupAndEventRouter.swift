//
//  SelectMeetingGroupAndEventRouter.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 25/10/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol SelectMeetingGroupAndEventRoutingLogic {
    func returnToTrackSpeakersAfterSelectingMeetingGroup()
    func returnToTrackSpeakersAfterSelectingEvent()
}

protocol SelectMeetingGroupAndEventDataPassing {
    var dataStore: SelectMeetingGroupAndEventDataStore? { get }
}

class SelectMeetingGroupAndEventRouter: NSObject, SelectMeetingGroupAndEventRoutingLogic, SelectMeetingGroupAndEventDataPassing {
    weak var controller: SelectMeetingGroupAndEventController?
    var dataStore: SelectMeetingGroupAndEventDataStore?
  
  // MARK: Routing
  
    func returnToTrackSpeakersAfterSelectingMeetingGroup() {
        let destinationVC = controller?.source
        var destinationDS = destinationVC?.router?.dataStore
        passDataToTrackSpeakers(source: dataStore!, destination: &destinationDS!)
        destinationVC!.router!.returnFromSelectingMeetingGroup()
    }

    func returnToTrackSpeakersAfterSelectingEvent() {
        let destinationVC = controller?.source
        var destinationDS = destinationVC?.router?.dataStore
        passDataToTrackSpeakers(source: dataStore!, destination: &destinationDS!)
        destinationVC!.router!.returnFromSelectingEvent()
    }
  
  // MARK: Passing data
  
    func passDataToTrackSpeakers(source: SelectMeetingGroupAndEventDataStore, destination: inout TrackSpeakersDataStore) {
        destination.currentEntity = source.currentEntity
        destination.currentMeetingGroup = source.currentMeetingGroup
        destination.currentEvent = source.currentEvent
    }
}
