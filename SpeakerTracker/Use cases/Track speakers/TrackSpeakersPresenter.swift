//
//  TrackSpeakersPresenter.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 14/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TrackSpeakersPresentationLogic {
    func presentNames(response: TrackSpeakers.Speakers.Response)
}

class TrackSpeakersPresenter: TrackSpeakersPresentationLogic {
    weak var viewController: TrackSpeakersDisplayLogic?

    // MARK: - VIP

    func presentNames(response: TrackSpeakers.Speakers.Response) {
        let names = [String]()
        var remainingNames = [0 : names]
        var waitingNames = [0 : names]
        var speakingNames = [0 : names]
        
        for item in response.remainingList! {
            let section = item.key
            for member in item.value {
                let memberName = member.firstName! + " " + member.lastName!
                remainingNames[section]!.append(memberName)
            }
        }
        for item in response.waitingList! {
            let section = item.key
            for member in item.value {
                let memberName = member.firstName! + " " + member.lastName!
                waitingNames[section]!.append(memberName)
            }
        }
        
        for item in response.speakingList! {
            let section = item.key
            speakingNames[section] = [String]()
            for member in item.value {
                let memberName = member.firstName! + " " + member.lastName!
                speakingNames[section]!.append(memberName)
            }
        }
        
        let viewModel = TrackSpeakers.Speakers.ViewModel(remainingNames: remainingNames, waitingNames: waitingNames, speakingNames: speakingNames )
        viewController?.displayNames(viewModel: viewModel)
    }
}
