//
//  DisplaySubEntitiesPopUpInteractor.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 13/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DisplaySubEntitiesPopUpBusinessLogic {
    func fetchSubEntities(request: DisplaySubEntitiesPopUp.SubEntities.Request)
    func getSubEntity(index: Int) -> SubEntity
    func setEntity(entity: Entity?)
}

protocol DisplaySubEntitiesPopUpDataStore {
    var entity: Entity? {get set}
}

class DisplaySubEntitiesPopUpInteractor: DisplaySubEntitiesPopUpBusinessLogic, DisplaySubEntitiesPopUpDataStore {
    var presenter: DisplaySubEntitiesPopUpPresentationLogic?
    var entity: Entity?
    var subEntity: SubEntity?
    var subEntities: [SubEntity]?



    func fetchSubEntities(request: DisplaySubEntitiesPopUp.SubEntities.Request) {
        self.subEntities = entity?.subEntities
        let response = DisplaySubEntitiesPopUp.SubEntities.Response(subEntities: self.subEntities)
        self.presenter?.presentSubEntities(response: response)
    }
    
    
    func getSubEntity(index: Int) -> SubEntity {
        return subEntities![index]
    }
    
    func setEntity(entity: Entity?) {
        self.entity = entity
    }
}
