//
//   DisplayMeetingGroupsPopUpInteractor.swift
//  SpeakerTracker
//
//  Created by Warwick McNaughton on 13/09/18.
//  Copyright (c) 2018 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol  DisplayMeetingGroupsPopUpBusinessLogic {
    func fetchMeetingGroups(request:  DisplayMeetingGroupsPopUp.MeetingGroups.Request)
    func getMeetingGroup(index: Int) -> MeetingGroup
    func setEntity(entity: Entity?)
}

protocol  DisplayMeetingGroupsPopUpDataStore {
    var entity: Entity? {get set}
}

class  DisplayMeetingGroupsPopUpInteractor:  DisplayMeetingGroupsPopUpBusinessLogic,  DisplayMeetingGroupsPopUpDataStore {
    var presenter:  DisplayMeetingGroupsPopUpPresentationLogic?
    var entity: Entity?
    var meetingGroup: MeetingGroup?
    var meetingGroups: [MeetingGroup]?



    func fetchMeetingGroups(request:  DisplayMeetingGroupsPopUp.MeetingGroups.Request) {
        self.meetingGroups = entity?.meetingGroups
        let response = DisplayMeetingGroupsPopUp.MeetingGroups.Response(meetingGroups: self.meetingGroups)
        self.presenter?.presentMeetingGroups(response: response)
    }
    
    
    func getMeetingGroup(index: Int) -> MeetingGroup {
        return meetingGroups![index]
    }
    
    func setEntity(entity: Entity?) {
        self.entity = entity
    }
}
